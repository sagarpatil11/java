package com.bridgelabz.utility;

import java.util.Scanner;

public class Utility 
{
	Scanner scanner=new Scanner(System.in);
	
	//take input of integer value using Scanner class and return integer 
	public int inputNumber()
	{
		int number;
		number=scanner.nextInt();
		return number;
		
	}
	
	//Take input 1D integer type Array and return integer array
		public int[] input1DArray(int arraySize){
			int array[]=new int[arraySize];
			for(int i=0;i<arraySize;i++)
			{
				//System.out.println("Enter array["+i+"] : ");
				array[i]=scanner.nextInt();
			}
			return array;
	}
		
	//Print 1D integer array
	public void print1DArray(int array[])
	{
			for(int i=0;i<array.length;i++)
				System.out.print(array[i]+" ");
			System.out.println();
		}
	
	
	//Take input for integer type 2D array for rows and columns and return integer type 2D array
	public int[][] input2DIntegerArray(int row,int col)
	{
		int array[][]=new int[row][col];
		for(int i=0;i<row;i++)
		{
			for(int j=0;j<col;j++)
			{
				array[i][j]=scanner.nextInt();
			}
		}
		return array;
	}
	
	
	//print 2D array of Integer type and return void
	public void print2DIntegerArray(int array[][])
	{
			for(int i=0;i<array.length;i++)
			{
				for(int j=0;j<array.length;j++)
				{
			
					System.out.print(array[i]+" ");
				}
				System.out.println();
			}
	}
	
	
	//Take input of String type string and return string 
	public String inputString()
	{
		String string=scanner.nextLine();
		return string;
	}
	
	//Bubble Sort for Integer array
	//take integer array as input and returns sorted integer array
		public int[] bubbleSort(int numbers[])
	   	 {
	        int temp;
	        for(int i = 0; i < numbers.length; i++)
	       	{
	            for(int j = 1; j < (numbers.length -i); j++)
	            {
	            	
	        		if(numbers[j-1] > numbers[j])
	    			{
	    				temp = numbers[j-1];
	   					numbers[j-1]=numbers[j];
	    				numbers[j]=temp;
	    			}
	   		 	}
	    	}
			return numbers;
		}
		
	//Bubble sort for character array
		
		
		
		
		
	//Binary search for sorted integer array
	//take sorted integer array and value to be search as input and return the the searched value if found 
	//or -1 if not found
		
	public int binarySearch(int[] array, int search) 
	{
	       int start = 0;
	       int end = array.length - 1;
	       while (start <= end) 
	       {
	           int mid = (start + end) / 2;
	           if (search == array[mid]) 
	           {
	                return mid;
	           }
	           if (search < array[mid]) 
	           {
	              	end = mid - 1;
	           } 
	           else 
	           {
	               	start = mid + 1;
	           }
	       }
	       return -1;
	}	

}
